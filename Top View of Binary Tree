#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/



vector<int> getTopView(TreeNode<int> *root) {
    vector<int> res;
    if (root == NULL)
        return res;
    map<int, int> mp;
    queue<pair<TreeNode<int>*, int>> q;
    q.push(make_pair(root, 0));
    while (!q.empty()) {
        pair<TreeNode<int>*, int> data = q.front();
        q.pop();
        TreeNode<int>* node = data.first;
        int hd = data.second;
        if (mp.find(hd) == mp.end()) {
            mp[hd] = node->val;
        }
        if (node->left != NULL)
            q.push(make_pair(node->left, hd - 1));
        if (node->right != NULL)
            q.push(make_pair(node->right, hd + 1));
    }
    for (auto i : mp) {
        res.push_back(i.second);
    }
    return res;
}
