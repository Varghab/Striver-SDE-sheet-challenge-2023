#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    vector<int>res;
    if(root==NULL)return res;
    map<int,int>mp;
    queue<pair<BinaryTreeNode<int>*,int>>q;
    q.push(make_pair(root,0));
    while(!q.empty()){
        pair<BinaryTreeNode<int>*,int> data = q.front();
        q.pop();
        BinaryTreeNode<int>* node = data.first;
        int hd = data.second;
        mp[hd] = node->data;
        if(node->left)q.push(make_pair(node->left,hd-1));
        if(node->right)q.push(make_pair(node->right,hd+1));
    }
    for(auto i:mp){
        res.push_back(i.second);
    }
    return res;
    
}
