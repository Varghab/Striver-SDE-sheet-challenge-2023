/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>>res;
    void solve(TreeNode*root, int target, vector<int>temp,int sum){
        if(root==NULL)return;
        if(root->left==NULL&&root->right==NULL){
            sum+=root->val;
            if(sum==target){
                temp.push_back(root->val);
                res.push_back(temp);
            }
        }
        temp.push_back(root->val);
        solve(root->left,target,temp,sum+root->val);
        solve(root->right,target,temp,sum+root->val);

    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        solve(root, targetSum,{},0);
        return res;
    }
};
